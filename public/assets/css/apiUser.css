export const loginApiUser = async (req, res) => {
    try {
        const { user, password } = req.body;

        // Validar campos obligatorios
        if (!user || !password) {
            return res.status(400).json({ error: "Usuario y contraseña son obligatorios" });
        }

        // Buscar al usuario en la base de datos
        let sqlQuery = "SELECT * FROM api_users WHERE Api_user = ?";
        const [rows] = await connect.query(sqlQuery, [user]);

        if (rows.length === 0) {
            return res.status(401).json({ error: "Credenciales incorrectas" });
        }

        const userData = rows[0];

        // Comparar la contraseña hasheada con la contraseña proporcionada
        const isPasswordValid = await bcrypt.compare(password, userData.Api_password);
        if (!isPasswordValid) {
            return res.status(401).json({ error: "Credenciales incorrectas" });
        }

        // Generar un token JWT
        const token = jwt.sign(
            {
                id: userData.Api_users_id,
                user: userData.Api_user
            },
            process.env.JWT_SECRET,
            { expiresIn: "1h" }
        );

        // Respuesta exitosa
        res.status(200).json({
            message: "Inicio de sesión exitoso",
            token,
            user: {
                id: userData.Api_users_id,
                user: userData.Api_user
            }
        });
    } catch (error) {
        console.error('Error al iniciar sesión:', error);
        res.status(500).json({ error: "Error al iniciar sesión", details: error.message });
    }
};